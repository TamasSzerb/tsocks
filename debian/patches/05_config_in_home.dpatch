#! /bin/sh /usr/share/dpatch/dpatch-run
## 05_config_in_home.dpatch by Reinhard Tartler <siretart@tauware.de>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Additionally search for the configuration file in user home directory

@DPATCH@
diff -urNad tsocks-1.8beta5~/parser.c tsocks-1.8beta5/parser.c
--- tsocks-1.8beta5~/parser.c	2008-03-03 14:05:14.000000000 +0100
+++ tsocks-1.8beta5/parser.c	2008-03-03 14:05:36.000000000 +0100
@@ -36,6 +36,32 @@
 static int handle_defpass(struct parsedfile *, int, char *);
 static int make_netent(char *value, struct netent **ent);
 
+char __attribute__ ((visibility ("hidden")))
+*find_config(char *line) {
+	struct passwd* pw;
+
+	errno = 0;
+
+	pw = getpwuid(getuid());
+	if (errno) {
+		perror("getpwuid");
+		return NULL;
+	}
+
+	/* check for config in $HOME */
+	snprintf(line, MAXLINE - 1, "%s/.tsocks.conf", pw->pw_dir);
+
+	if (access(line, R_OK)) {
+		show_msg(MSGDEBUG, "Can't access %s, using " CONF_FILE " instead.\n", line);
+		strncpy(line, CONF_FILE, MAXLINE - 1);
+	}
+
+	/* Insure null termination */
+	line[MAXLINE - 1] = (char) 0;
+
+	return line;
+}
+
 int __attribute__ ((visibility ("hidden")))
 read_config (char *filename, struct parsedfile *config) {
 	FILE *conf;
diff -urNad tsocks-1.8beta5~/parser.c.rej tsocks-1.8beta5/parser.c.rej
--- tsocks-1.8beta5~/parser.c.rej	1970-01-01 01:00:00.000000000 +0100
+++ tsocks-1.8beta5/parser.c.rej	2008-03-03 14:05:14.000000000 +0100
@@ -0,0 +1,52 @@
+***************
+*** 6,15 ****
+  
+  #include <netinet/in.h>
+  #include <sys/socket.h>
+  #include <arpa/inet.h>
+  #include <string.h>
+  #include <stdio.h>
+  #include <stdlib.h>
+  #include <errno.h>
+  #include <config.h>
+  #include "common.h"
+--- 6,18 ----
+  
+  #include <netinet/in.h>
+  #include <sys/socket.h>
++ #include <sys/types.h>
+  #include <arpa/inet.h>
++ #include <pwd.h>
+  #include <string.h>
+  #include <stdio.h>
+  #include <stdlib.h>
++ #include <unistd.h>
+  #include <errno.h>
+  #include <config.h>
+  #include "common.h"
+***************
+*** 52,63 ****
+  
+  	/* If a filename wasn't provided, use the default */
+  	if (filename == NULL) {
+- 		strncpy(line, CONF_FILE, sizeof(line) - 1);
+- 		/* Insure null termination */
+- 		line[sizeof(line) - 1] = (char) 0;
+- 		filename = line;
+  	}
+  
+  	/* Read the configuration file */
+  	if ((conf = fopen(filename, "r")) == NULL) {
+  		show_msg(MSGERR, "Could not open socks configuration file "
+--- 83,93 ----
+  
+  	/* If a filename wasn't provided, use the default */
+  	if (filename == NULL) {
++ 		filename = find_config(line);
+  	}
+  
++ 	show_msg(MSGDEBUG, "using %s as configuration file\n", line);
++ 
+  	/* Read the configuration file */
+  	if ((conf = fopen(filename, "r")) == NULL) {
+  		show_msg(MSGERR, "Could not open socks configuration file "
diff -urNad tsocks-1.8beta5~/tsocks.8.rej tsocks-1.8beta5/tsocks.8.rej
--- tsocks-1.8beta5~/tsocks.8.rej	1970-01-01 01:00:00.000000000 +0100
+++ tsocks-1.8beta5/tsocks.8.rej	2008-03-03 14:05:14.000000000 +0100
@@ -0,0 +1,29 @@
+***************
+*** 34,46 ****
+  
+  .BR tsocks
+  is a library to allow transparent SOCKS proxying. It wraps the normal
+- connect() function. When a connection is attempted, it consults the 
+- configuration file (which is defined at configure time but defaults to 
+- /etc/tsocks.conf) and determines if the IP address specified is local. If 
+- it is not, the library redirects the connection to a SOCKS server
+- specified in the configuration file. It then negotiates that connection
+- with the SOCKS server and passes the connection back to the calling
+- program. 
+  
+  .BR tsocks 
+  is designed for use in machines which are firewalled from then
+--- 34,46 ----
+  
+  .BR tsocks
+  is a library to allow transparent SOCKS proxying. It wraps the normal
++ connect() function. When a connection is attempted, it consults the
++ configuration file (which is defined at configure time but defaults to
++ ~/.tsocks.conf and if that file cannot be accessed, to /etc/tsocks.conf)
++ and determines if the IP address specified is local. If it is not, the
++ library redirects the connection to a SOCKS server specified in the
++ configuration file. It then negotiates that connection with the SOCKS
++ server and passes the connection back to the calling program.
+  
+  .BR tsocks 
+  is designed for use in machines which are firewalled from then
